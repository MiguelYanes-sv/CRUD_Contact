{"ast":null,"code":"var _jsxFileName = \"/Users/mikeyanes/Desktop/CRUD_Contacts/crud_contacts/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* import React from 'react';\nimport ReactDOM from 'react-dom'; */\n\n/* import Header from './components/header'\nimport BuscarContactos from './components/BuscarContacto'\nimport BtnContactos from './components/BtnContacto'\nimport AgregarContactos from './components/AgregarContacto'\nimport EditarContactos from './components/EditarContactos'\nimport {confirmAlert} from 'react-confirmAlert'\nimport 'react-confirmAlert/src/react-confirmAlert.css' */\nconst App = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"h1\", {\n    children: \"Hola\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n/* const App = () => {\n    \n    const {Name, saveName} = useState('');\n    const {LastName, saveLastName} = useState('');\n    const {Phone, savePhone} = useState('');\n    const {getId, setId} = useState();\n    const {getContact, setContact} = useState([]);\n    const {getBusqueda, setBusqueda} = useState([]);\n\n    useEffect(() => {\n        setContactos(getBusqueda)\n    },[])\n\n    const EliminarContacto = () => {\n        confirmAlert({\n            title:'Confirmar',\n            message:'¿Estas seguro que quieres eliminar este contacto?',\n            button: [\n              {\n                  Label:'Si',\n                  onClick: () => {\n                      let cont = 0;\n                      let arreglo = getContact\n                      arreglo.forEach((registro) => {\n                          if(contacto.id === registro.id){\n                              arreglo.spice(cont, 1);\n                          }\n                          cont++;\n                      });\n\n                      let lista = []\n\n                      for (let i=0; i < arreglo.length; i++ ){\n                          lista = array.from([...arreglo])\n                      }\n                      setContact([...lista])\n                  }\n              },\n              {\n                  label:'No',\n              }\n            ]\n        });\n    }\n\n\n} */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mikeyanes/Desktop/CRUD_Contacts/crud_contacts/src/App.js"],"names":["App"],"mappings":";;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,MAAK;AACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,CAFD;;KAAMA,G;AAIN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* import React from 'react';\nimport ReactDOM from 'react-dom'; */\n\n/* import Header from './components/header'\nimport BuscarContactos from './components/BuscarContacto'\nimport BtnContactos from './components/BtnContacto'\nimport AgregarContactos from './components/AgregarContacto'\nimport EditarContactos from './components/EditarContactos'\nimport {confirmAlert} from 'react-confirmAlert'\nimport 'react-confirmAlert/src/react-confirmAlert.css' */\n\nconst App = () =>{\n    <h1>Hola</h1>\n}\n\nexport default App;\n\n/* const App = () => {\n    \n    const {Name, saveName} = useState('');\n    const {LastName, saveLastName} = useState('');\n    const {Phone, savePhone} = useState('');\n    const {getId, setId} = useState();\n    const {getContact, setContact} = useState([]);\n    const {getBusqueda, setBusqueda} = useState([]);\n\n    useEffect(() => {\n        setContactos(getBusqueda)\n    },[])\n\n    const EliminarContacto = () => {\n        confirmAlert({\n            title:'Confirmar',\n            message:'¿Estas seguro que quieres eliminar este contacto?',\n            button: [\n              {\n                  Label:'Si',\n                  onClick: () => {\n                      let cont = 0;\n                      let arreglo = getContact\n                      arreglo.forEach((registro) => {\n                          if(contacto.id === registro.id){\n                              arreglo.spice(cont, 1);\n                          }\n                          cont++;\n                      });\n\n                      let lista = []\n\n                      for (let i=0; i < arreglo.length; i++ ){\n                          lista = array.from([...arreglo])\n                      }\n                      setContact([...lista])\n                  }\n              },\n              {\n                  label:'No',\n              }\n            ]\n        });\n    }\n\n\n} */"]},"metadata":{},"sourceType":"module"}