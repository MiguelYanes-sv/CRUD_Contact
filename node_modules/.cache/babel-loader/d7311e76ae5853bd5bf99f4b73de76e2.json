{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n/* import Header from './components/header'\nimport BuscarContactos from './components/BuscarContacto'\nimport BtnContactos from './components/BtnContacto'\nimport AgregarContactos from './components/AgregarContacto'\nimport EditarContactos from './components/EditarContactos'\nimport {confirmAlert} from 'react-confirmAlert'\nimport 'react-confirmAlert/src/react-confirmAlert.css' */\n\nconst App = () => {\n  _s();\n\n  const {\n    Name,\n    saveName\n  } = useState('');\n  const {\n    LastName,\n    saveLastName\n  } = useState('');\n  const {\n    Phone,\n    savePhone\n  } = useState('');\n  const {\n    getId,\n    setId\n  } = useState();\n  const {\n    getContact,\n    setContact\n  } = useState([]);\n  const {\n    getBusqueda,\n    setBusqueda\n  } = useState([]);\n  useEffect(() => {\n    setContactos(getBusqueda);\n  }, []);\n\n  const EliminarContacto = () => {\n    confirmAlert({\n      title: 'Confirmar',\n      message: '¿Estas seguro que quieres eliminar este contacto?',\n      button: [{\n        Label: 'Si',\n        onClick: () => {\n          let cont = 0;\n          let arreglo = getContact;\n          arreglo.forEach(registro => {\n            if (contacto.id === registro.id) {\n              arreglo.spice(cont, 1);\n            }\n\n            cont++;\n          });\n          let lista = [];\n\n          for (let i = 0; i < arreglo.length; i++) {\n            lista = array.from([...arreglo]);\n          }\n\n          setContact([...lista]);\n        }\n      }, {\n        label: 'No'\n      }]\n    });\n  };\n};\n\n_s(App, \"FQ6nVJWCsVQ7ljyX+YP43jJgTAU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mikeyanes/Desktop/CRUD_Contacts/crud_contacts/src/App.js"],"names":["React","ReactDOM","App","Name","saveName","useState","LastName","saveLastName","Phone","savePhone","getId","setId","getContact","setContact","getBusqueda","setBusqueda","useEffect","setContactos","EliminarContacto","confirmAlert","title","message","button","Label","onClick","cont","arreglo","forEach","registro","contacto","id","spice","lista","i","length","array","from","label"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAmBC,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA2BF,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM;AAACK,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAiBN,QAAQ,EAA/B;AACA,QAAM;AAACO,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA2BR,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM;AAACS,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6BV,QAAQ,CAAC,EAAD,CAA3C;AAEAW,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,YAAY,CAACH,WAAD,CAAZ;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMI,gBAAgB,GAAG,MAAM;AAC3BC,IAAAA,YAAY,CAAC;AACTC,MAAAA,KAAK,EAAC,WADG;AAETC,MAAAA,OAAO,EAAC,mDAFC;AAGTC,MAAAA,MAAM,EAAE,CACN;AACIC,QAAAA,KAAK,EAAC,IADV;AAEIC,QAAAA,OAAO,EAAE,MAAM;AACX,cAAIC,IAAI,GAAG,CAAX;AACA,cAAIC,OAAO,GAAGd,UAAd;AACAc,UAAAA,OAAO,CAACC,OAAR,CAAiBC,QAAD,IAAc;AAC1B,gBAAGC,QAAQ,CAACC,EAAT,KAAgBF,QAAQ,CAACE,EAA5B,EAA+B;AAC3BJ,cAAAA,OAAO,CAACK,KAAR,CAAcN,IAAd,EAAoB,CAApB;AACH;;AACDA,YAAAA,IAAI;AACP,WALD;AAOA,cAAIO,KAAK,GAAG,EAAZ;;AAEA,eAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGP,OAAO,CAACQ,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCD,YAAAA,KAAK,GAAGG,KAAK,CAACC,IAAN,CAAW,CAAC,GAAGV,OAAJ,CAAX,CAAR;AACH;;AACDb,UAAAA,UAAU,CAAC,CAAC,GAAGmB,KAAJ,CAAD,CAAV;AACH;AAlBL,OADM,EAqBN;AACIK,QAAAA,KAAK,EAAC;AADV,OArBM;AAHC,KAAD,CAAZ;AA6BH,GA9BD;AAiCH,CA9CD;;GAAMnC,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/* import Header from './components/header'\nimport BuscarContactos from './components/BuscarContacto'\nimport BtnContactos from './components/BtnContacto'\nimport AgregarContactos from './components/AgregarContacto'\nimport EditarContactos from './components/EditarContactos'\nimport {confirmAlert} from 'react-confirmAlert'\nimport 'react-confirmAlert/src/react-confirmAlert.css' */\n\nconst App = () => {\n    \n    const {Name, saveName} = useState('');\n    const {LastName, saveLastName} = useState('');\n    const {Phone, savePhone} = useState('');\n    const {getId, setId} = useState();\n    const {getContact, setContact} = useState([]);\n    const {getBusqueda, setBusqueda} = useState([]);\n\n    useEffect(() => {\n        setContactos(getBusqueda)\n    },[])\n\n    const EliminarContacto = () => {\n        confirmAlert({\n            title:'Confirmar',\n            message:'¿Estas seguro que quieres eliminar este contacto?',\n            button: [\n              {\n                  Label:'Si',\n                  onClick: () => {\n                      let cont = 0;\n                      let arreglo = getContact\n                      arreglo.forEach((registro) => {\n                          if(contacto.id === registro.id){\n                              arreglo.spice(cont, 1);\n                          }\n                          cont++;\n                      });\n\n                      let lista = []\n\n                      for (let i=0; i < arreglo.length; i++ ){\n                          lista = array.from([...arreglo])\n                      }\n                      setContact([...lista])\n                  }\n              },\n              {\n                  label:'No',\n              }\n            ]\n        });\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}